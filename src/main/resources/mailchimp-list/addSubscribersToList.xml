<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<template name="addSubscribersToList" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="listId" description="The list ID to connect to."/>
    <parameter name="batch" description="An array of structs for each address to subscribe to the List."/>
    <parameter name="doubleOptin"
               description="Flag to control whether to send an opt-in confirmation email - defaults to true."/>
    <parameter name="updateExisting"
               description="Flag to control whether to update members that are already subscribed to the list or to return an error, defaults to false (return error)."/>
    <parameter name="replaceInterests"
               description="Flag to determine whether we replace the interest groups with the updated groups provided, or we add the provided groups to the member's interest groups (optional, defaults to true)."/>
    <sequence>
        <property name="uri.var.listId" expression="$func:listId"/>
        <property name="uri.var.batch" expression="$func:batch"/>
        <property name="uri.var.doubleOptin" expression="$func:doubleOptin"/>
        <property name="uri.var.updateExisting" expression="$func:updateExisting"/>
        <property name="uri.var.replaceInterests" expression="$func:replaceInterests"/>
        <payloadFactory media-type="json">
            <format>
                {
                "id": "$1",
                "batch": $2,
                "apikey": "$3"
                }
            </format>
            <args>
                <arg expression="get-property('uri.var.listId')"/>
                <arg expression="get-property('uri.var.batch')"/>
                <arg expression="get-property('uri.var.apiKey')"/>
            </args>
        </payloadFactory>
        <script language="js">
            <![CDATA[
                var jsonPayload = mc.getPayloadJSON();                
                var doubleOptin = mc.getProperty('uri.var.doubleOptin');
                var replaceInterests = mc.getProperty('uri.var.replaceInterests');
                var updateExisting = mc.getProperty('uri.var.updateExisting');				
                if (doubleOptin != null && doubleOptin != ""){
                    jsonPayload["double_optin"] = doubleOptin;
                }                
                if (replaceInterests != null && replaceInterests != ""){
                    jsonPayload["replace_interests"] = replaceInterests;
                }                
                if (updateExisting != null && updateExisting != ""){
                    jsonPayload["update_existing"] = updateExisting;
                }                
                mc.setPayloadJSON(jsonPayload);
            ]]>
        </script>
        <!--MailChimp API expects Content-Length Header -->
        <property name="DISABLE_CHUNKING" value="true" scope="axis2"/>
        <call>
            <endpoint>
                <http method="post" uri-template="{uri.var.apiUrl}/lists/batch-subscribe.{uri.var.format}"/>
            </endpoint>
        </call>
        <!-- Remove custom Headers from the API Response -->
        <header name="X-N" action="remove" scope="transport"/>
        <header name="X-MailChimp-API-Error-Code" action="remove" scope="transport"/>
    </sequence>
</template>