<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<proxy xmlns="http://ws.apache.org/ns/synapse" name="mailchimp" transports="https,http" statistics="disable"
       trace="disable" startOnLoad="true">
    <target>
        <inSequence>
            <property name="apiUrl" expression="json-eval($.apiUrl)"/>
            <property name="apiKey" expression="json-eval($.apiKey)"/>
            <property name="format" expression="json-eval($.format)"/>
            <property name="name" expression="json-eval($.name)"/>
            <property name="html" expression="json-eval($.html)"/>
            <property name="folderId" expression="json-eval($.folderId)"/>
            <property name="user" expression="json-eval($.user)"/>
            <property name="options" expression="json-eval($.options)"/>
            <property name="content" expression="json-eval($.content)"/>
            <property name="type" expression="json-eval($.type)"/>
            <property name="listId" expression="json-eval($.listId)"/>
            <property name="campaignId" expression="json-eval($.campaignId)"/>
            <property name="createdBefore" expression="json-eval($.createdBefore)"/>
            <property name="batch" expression="json-eval($.batch)"/>
            <property name="doubleOptin" expression="json-eval($.doubleOptin)"/>
            <property name="updateExisting" expression="json-eval($.updateExisting)"/>
            <property name="replaceInterests" expression="json-eval($.replaceInterests)"/>
            <property name="limit" expression="json-eval($.limit)"/>
            <property name="deleteMember" expression="json-eval($.deleteMember)"/>
            <property name="sendNotify" expression="json-eval($.sendNotify)"/>
            <property name="sendGoodbye" expression="json-eval($.sendGoodbye)"/>
            <property name="listEmailId" expression="json-eval($.listEmailId)"/>
            <property name="emailType" expression="json-eval($.emailType)"/>
            <property name="newEmail" expression="json-eval($.newEmail)"/>
            <property name="mcLanguage" expression="json-eval($.mcLanguage)"/>
            <property name="email" expression="json-eval($.email)"/>
            <property name="latitude" expression="json-eval($.latitude)"/>
            <property name="longitude" expression="json-eval($.longitude)"/>
            <mailchimp.init>
                <apiUrl>{$ctx:apiUrl}</apiUrl>
                <apiKey>{$ctx:apiKey}</apiKey>
                <format>{$ctx:format}</format>
            </mailchimp.init>
            <switch source="get-property('transport', 'Action')">
                <case regex="urn:createTemplate">
                    <mailchimp.createTemplate>
                        <name>{$ctx:name}</name>
                        <html>{$ctx:html}</html>
                        <folderId>{$ctx:folderId}</folderId>
                    </mailchimp.createTemplate>
                </case>
                <case regex="urn:listTemplates">
                    <mailchimp.listTemplates>
                        <user>{$ctx:user}</user>
                        <folderId>{$ctx:folderId}</folderId>
                    </mailchimp.listTemplates>
                </case>
                <case regex="urn:createDraftCampaign">
                    <mailchimp.createDraftCampaign>
                        <options>{$ctx:options}</options>
                        <content>{$ctx:content}</content>
                        <type>{$ctx:type}</type>
                    </mailchimp.createDraftCampaign>
                </case>
                <case regex="urn:listCampaigns">
                    <mailchimp.listCampaigns>
                        <campaignId>{$ctx:campaignId}</campaignId>
                        <listId>{$ctx:listId}</listId>
                    </mailchimp.listCampaigns>
                </case>
                <case regex="urn:addSubscribersToList">
                    <mailchimp.addSubscribersToList>
                        <listId>{$ctx:listId}</listId>
                        <batch>{$ctx:batch}</batch>
                        <doubleOptin>{$ctx:doubleOptin}</doubleOptin>
                        <updateExisting>{$ctx:updateExisting}</updateExisting>
                        <replaceInterests>{$ctx:replaceInterests}</replaceInterests>
                    </mailchimp.addSubscribersToList>
                </case>
                <case regex="urn:listSubscriberLists">
                    <mailchimp.listSubscriberLists>
                        <createdBefore>{$ctx:createdBefore}</createdBefore>
                        <limit>{$ctx:limit}</limit>
                    </mailchimp.listSubscriberLists>
                </case>
                <case regex="urn:sendCampaign">
                    <mailchimp.sendCampaign>
                        <campaignId>{$ctx:campaignId}</campaignId>
                    </mailchimp.sendCampaign>
                </case>
                <case regex="urn:removeSubscribersFromList">
                    <mailchimp.removeSubscribersFromList>
                        <listId>{$ctx:listId}</listId>
                        <batch>{$ctx:batch}</batch>
                        <deleteMember>{$ctx:deleteMember}</deleteMember>
                        <sendNotify>{$ctx:sendNotify}</sendNotify>
                        <sendGoodbye>{$ctx:sendGoodbye}</sendGoodbye>
                    </mailchimp.removeSubscribersFromList>
                </case>
                <case regex="urn:updateMember">
                    <mailchimp.updateMember>
                        <listId>{$ctx:listId}</listId>
                        <email>{$ctx:email}</email>
                        <listEmailId>{$ctx:listEmailId}</listEmailId>
                        <emailType>{$ctx:emailType}</emailType>
                        <newEmail>{$ctx:newEmail}</newEmail>
                        <latitude>{$ctx:latitude}</latitude>
                        <longitude>{$ctx:longitude}</longitude>
                        <mcLanguage>{$ctx:mcLanguage}</mcLanguage>
                    </mailchimp.updateMember>
                </case>
            </switch>
            <respond/>
        </inSequence>
        <outSequence>
            <log/>
            <send/>
        </outSequence>
    </target>
    <description/>
</proxy>